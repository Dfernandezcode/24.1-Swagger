{
  "openapi": "3.0.0",
  "info": { "title": "Node 24.1", "version": "1.0.0", "description": "This is a simple CRUD API of books", "license": { "name": "MIT", "url": "http://mit.com" }, "contact": { "name": "Daniel Fernandez", "url": "https://github.com/dfernandezcode", "email": "dfernandez@example.com" } },
  "server": [{ "url": "http://localhost:3000" }],
  "paths": {
    "/authors": {
      "get": {
        "summary": "Get a list of authors with pagination",
        "parameters": [
          { "in": "query", "name": "page", "schema": { "type": "integer", "minimum": 1 }, "description": "Page number for pagination" },
          { "in": "query", "name": "limit", "schema": { "type": "integer", "minimum": 1 }, "description": "Maximum number of authors per page" }
        ],
        "responses": {
          "200": { "description": "List of authors with pagination details", "content": { "application/json": { "schema": { "type": "object", "properties": { "totalItems": { "type": "integer", "description": "Total number of authors" }, "totalPages": { "type": "integer", "description": "Total number of pages" }, "currentPage": { "type": "integer", "description": "Current page number" }, "data": { "type": "array", "items": { "$ref": "#/components/schemas/Author" } } } } } } },
          "400": { "description": "Invalid query parameters", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }
        }
      },
      "post": { "summary": "Create a new author", "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } }, "responses": { "201": { "description": "Author created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } }, "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } } } }
    },
    "/authors/{id}": {
      "get": {
        "summary": "Get an author by ID",
        "parameters": [{ "in": "path", "name": "id", "schema": { "type": "string" }, "required": true, "description": "ID of the author" }],
        "responses": { "200": { "description": "Author found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } }, "404": { "description": "Author not found", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }, "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } } }
      },
      "delete": {
        "summary": "Delete an author by ID",
        "parameters": [{ "in": "path", "name": "id", "schema": { "type": "string" }, "required": true, "description": "ID of the author to delete" }],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Author deleted", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } },
          "401": { "description": "Unauthorized operation", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "404": { "description": "Author not found", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }
        }
      },
      "put": {
        "summary": "Update an author by ID",
        "parameters": [{ "in": "path", "name": "id", "schema": { "type": "string" }, "required": true, "description": "ID of the author to update" }],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } },
        "responses": {
          "200": { "description": "Author updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } },
          "401": { "description": "Unauthorized operation", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "404": { "description": "Author not found", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }
        }
      }
    },
    "/authors/name/{name}": {
      "get": {
        "summary": "Search authors by name",
        "parameters": [{ "in": "path", "name": "name", "schema": { "type": "string" }, "required": true, "description": "Name of the author to search" }],
        "responses": { "200": { "description": "Authors found", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Author" } } } } }, "404": { "description": "Authors not found", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Author" } } } } }, "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } } }
      }
    },
    "/authors/login": {
      "post": {
        "summary": "Author login",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "properties": { "email": { "type": "string", "format": "email", "description": "Email of the author" }, "password": { "type": "string", "format": "password", "description": "Password of the author" } } } } } },
        "responses": {
          "200": { "description": "Successful login", "content": { "application/json": { "schema": { "type": "object", "properties": { "token": { "type": "string", "description": "JWT token for authentication" } } } } } },
          "400": { "description": "Invalid request body", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "401": { "description": "Unauthorized login", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }
        }
      }
    },
    "/authors/logo-upload": {
      "post": {
        "summary": "Upload an author's logo",
        "requestBody": { "required": true, "content": { "multipart/form-data": { "schema": { "type": "object", "properties": { "logo": { "type": "string", "format": "binary", "description": "Logo file to upload" }, "authorId": { "type": "string", "description": "ID of the author" } } } } } },
        "responses": {
          "200": { "description": "Logo uploaded", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Author" } } } },
          "400": { "description": "Invalid request body", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "404": { "description": "Author not found", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } },
          "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "type": "object", "properties": { "error": { "type": "string", "description": "Error message" } } } } } }
        }
      }
    },
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" } }
  },
  "components": {
    "schemas": {
      "Author": {
        "type": "object",
        "required": ["email", "password", "name", "country"],
        "properties": { "email": { "type": "string", "format": "email", "description": "Email of the author (e.g., john@example.com)" }, "password": { "type": "string", "format": "password", "description": "Password of the author (min 8 characters)" }, "name": { "type": "string", "description": "Name of the author (min 3 characters, max 30 characters)" }, "country": { "type": "string", "description": "Country of the author (uppercase, e.g., SPAIN)" }, "profileImage": { "type": "string", "description": "URL of the author's profile image (optional)" } }
      }
    }
  },
  "tags": []
}
